@using students.Models.Entities;
@model students.Models.Entities.VolunteerGroupIndexVm;

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Volunteer";
}

<h1>Volunteers</h1>
<h2>@Html.DisplayFor(model => model.testString)</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
@await Html.PartialAsync("ApplicationsPartial", Model)


<div id="table" class="container border shadow m-3">
    <table class="table table-borderless table-hover align-items-start">
            <p class="h4" style="font-weight: bold">Volunteers</p>
            <thead>
            <tr>
                <th class="col-2">
                    Name
                </th>
                <th class="col-1">
                    Age
                </th>
                <th class="col-2">
                   Study program
                </th>
                <th class="col-1">
                    Volunteer since
                </th>
                <th class="col-1">
                    Status
                </th>
                <th class="col-1">
                    Group
                </th>
                <th class="col-2"></th>
            </tr>
        </thead>
        <tbody id="tbody">
    @foreach (var item in Model.Volunteers) {
        @if(item.Status == VolunteerStatus.ACCEPTED){
            <tr id="row">
                <div class="card">
                <td class="col-2">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="col-1">
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td class="col-2">
                    @Html.DisplayFor(modelItem => item.StudyProgramme)
                </td>
                <td class="col-1">
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td class="col-1">
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td class="col-1">
                    @Html.DisplayFor(modelItem => item.Group.Name)
                </td>
                <td class="col-2"></td>
                <td class="col-1">
                <a id=@item.VolunteerId class="btn btn-primary" style="background-color:#3c3c80" role="button" data-bs-toggle="modal" data-bs-target="#myModal" name="volunteer">Info</a>
                </td>
                </div>
            </tr>
        }
    }
        </tbody>
    </table>
</div>

<div id="table" class="container border shadow m-3">
    <table class="table table-borderless table-hover align-items-start">
            <p class="h4" style="font-weight: bold">Groups</p>
            <thead>
            <tr>
                <th class="col-2">
                    Name
                </th>
                <th class="col-2"></th>
                <th class="col-2"></th>
                <th class="col-1">
                    Number of members</th>
            </tr>
        </thead>
        <tbody id="tbody-group">
    @foreach (var item in Model.Groups) {
            <tr id="row">
                <div class="card">
                <td class="col-2">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="col-2"></td>
                <td class="col-2"></td>
                <td class="col-2">
                    @Html.DisplayFor(modelItem => item.Volunteers.FindAll(volunteer => volunteer.Status == VolunteerStatus.ACCEPTED).Count)
                </td>
                <td class="col-2"></td>
                <td class="col-1"></td>
                <td class="col-1"><a id=@item.GroupId class="btn btn-primary" style="background-color:#3c3c80" role="button" data-bs-toggle="modal" data-bs-target="#myModal" name="group">Info</a></td>
                </div>
            </tr>
    }
        </tbody>
    </table>
</div>

<div class="container border shadow m-3">
    <table class="table table-borderless table-hover align-items-start">
        <p class="h4" style="font-weight: bold">Groups with API</p>
        <thead>
            <tr>
                <th class="col-6">Group Name</th>
                <th class="col-7">Members</th>
                <th class="col-5"></th>
            </tr>
        </thead>
        <tbody id="group-table">
        </tbody>
    </table>
</div>

<div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
<div class="modal-content">
    <div class="modal-header">
        <h4>Details:</h4>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            <span id="modal-table"></span>
        </div>
    </div>
</div>
</div>
</div>
<script>
let getGroups = async()=>{
 const res = await fetch("https://localhost:7151/api/GroupApi")
 const data = await res.json()

 let tableBody = document.getElementById("group-table")
 data.map(group =>{
    let row = tableBody.insertRow(0)
    row.insertCell(0).innerHTML = group.name
    row.insertCell(1).innerHTML = group.volunteers.length
    row.insertCell(2).innerHTML = `<a class="btn btn-primary" style="background-color:#3c3c80" role="button">Info</a>`
    row.classList.add("col-5")
 })

}
getGroups()

async function handleTableClick(evt){
    evt.preventDefault()
    evt.stopPropagation()
    const target = evt.target
    const id = target.id

    let date =""
    if(target.name === "volunteer"){
        const res = await fetch("https://localhost:7151/Volunteer/Details/"+id)
        data = await res.text()
    }
    else{
        const res = await fetch("https://localhost:7151/Group/Details/"+id)
        data = await res.text()
    }
    console.log(data)
    document.getElementById("modal-table").innerHTML = data
}
function setupHandlers(){
    document.getElementById("tbody").onclick = handleTableClick
    document.getElementById("tbody-group").onclick = handleTableClick
}
setupHandlers()
</script>
